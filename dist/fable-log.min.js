!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).FableLog=t()}}((function(){return function t(e,o,s){function r(a,n){if(!o[a]){if(!e[a]){var l="function"==typeof require&&require;if(!n&&l)return l(a,!0);if(i)return i(a,!0);var g=new Error("Cannot find module '"+a+"'");throw g.code="MODULE_NOT_FOUND",g}var h=o[a]={exports:{}};e[a][0].call(h.exports,(function(t){return r(e[a][1][t]||t)}),h,h.exports,t,e,o,s)}return o[a].exports}for(var i="function"==typeof require&&require,a=0;a<s.length;a++)r(s[a]);return r}({1:[function(t,e,o){e.exports=
/**
      * Base Logger Class
      *
      * @license MIT
      *
      * @author Steven Velozo <steven@velozo.com>
      */
class{constructor(t,e){this._Settings="object"==typeof t?t:{},this.loggerUUID=this.generateInsecureUUID(),this.levels=["trace","debug","info","warn","error","fatal"]}generateInsecureUUID(){let t=(new Date).getTime();return"LOGSTREAM-xxxxxx-yxxxxx".replace(/[xy]/g,(e=>{let o=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"==e?o:3&o|8).toString(16)}))}initialize(){}trace(t,e){this.write("trace",t,e)}debug(t,e){this.write("debug",t,e)}info(t,e){this.write("info",t,e)}warn(t,e){this.write("warn",t,e)}error(t,e){this.write("error",t,e)}fatal(t,e){this.write("fatal",t,e)}write(t,e,o){return!0}}},{}],2:[function(t,e,o){
/**
      * Simple browser shim loader - assign the npm module to a window global automatically
      *
      * @license MIT
      * @author <steven@velozo.com>
      */
var s=t("./Fable-Log.js");"object"!=typeof window||window.hasOwnProperty("FableLog")||(window.FableLog=s),e.exports=s},{"./Fable-Log.js":6}],3:[function(t,e,o){
/**
      * Default Logger Provider Function
      *
      * @license MIT
      *
      * @author Steven Velozo <steven@velozo.com>
      */
getDefaultProviders=()=>{let e={};return e.console=t("./Fable-Log-Logger-Console.js"),e.default=e.console,e},e.exports=getDefaultProviders()},{"./Fable-Log-Logger-Console.js":5}],4:[function(t,e,o){e.exports=[{loggertype:"console",streamtype:"console",level:"trace"}]},{}],5:[function(t,e,o){let s=t("./Fable-Log-BaseLogger.js");e.exports=class extends s{constructor(t,e){super(t),this._ShowTimeStamps=!!this._Settings.hasOwnProperty("showtimestamps")&&1==this._Settings.showtimestamps,this._FormattedTimeStamps=!!this._Settings.hasOwnProperty("formattedtimestamps")&&1==this._Settings.formattedtimestamps,this._ContextMessage=this._Settings.hasOwnProperty("Context")?`(${this._Settings.Context})`:e._Settings.hasOwnProperty("Product")?`(${e._Settings.Product})`:"Unnamed_Log_Context",this._OutputLogLinesToConsole=!this._Settings.hasOwnProperty("outputloglinestoconsole")||this._Settings.outputloglinestoconsole,this._OutputObjectsToConsole=!this._Settings.hasOwnProperty("outputobjectstoconsole")||this._Settings.outputobjectstoconsole,this.prefixCache={};for(let t=0;t<=this.levels.length;t++)this.prefixCache[this.levels[t]]=`[${this.levels[t]}] ${this._ContextMessage}: `,this._ShowTimeStamps&&(this.prefixCache[this.levels[t]]=" "+this.prefixCache[this.levels[t]])}write(t,e,o){let s="";this._ShowTimeStamps&&this._FormattedTimeStamps?s=(new Date).toISOString():this._ShowTimeStamps&&(s=+new Date);let r=`${s}${this.prefixCache[t]}${e}`;return this._OutputLogLinesToConsole&&console.log(r),this._OutputObjectsToConsole&&void 0!==o&&console.log(JSON.stringify(o,null,2)),r}}},{"./Fable-Log-BaseLogger.js":1}],6:[function(t,e,o){
/**
      * Fable Logging Add-on
      *
      * @license MIT
      *
      * @author Steven Velozo <steven@velozo.com>
      * @module Fable Logger
      */
class s{constructor(e,o){let s="object"==typeof e?e:{};this._Settings=s,this._Providers=t("./Fable-Log-DefaultProviders-Node.js"),this._StreamDefinitions=s.hasOwnProperty("LogStreams")?s.LogStreams:t("./Fable-Log-DefaultStreams.json"),this.logStreams=[],this.logProviders={},this.activeLogStreams={},this.logStreamsTrace=[],this.logStreamsDebug=[],this.logStreamsInfo=[],this.logStreamsWarn=[],this.logStreamsError=[],this.logStreamsFatal=[],this.datumDecorator=t=>t,this.uuid="string"==typeof s.Product?s.Product:"Default"}addLogger(t,e){if(this.activeLogStreams.hasOwnProperty(t.loggerUUID))return!1;switch(this.logStreams.push(t),this.activeLogStreams[t.loggerUUID]=!0,e){case"trace":this.logStreamsTrace.push(t);case"debug":this.logStreamsDebug.push(t);case"info":this.logStreamsInfo.push(t);case"warn":this.logStreamsWarn.push(t);case"error":this.logStreamsError.push(t);case"fatal":this.logStreamsFatal.push(t)}return!0}setDatumDecorator(t){this.datumDecorator="function"==typeof t?t:t=>t}trace(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsTrace.length;e++)this.logStreamsTrace[e].trace(t,o)}debug(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsDebug.length;e++)this.logStreamsDebug[e].debug(t,o)}info(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsInfo.length;e++)this.logStreamsInfo[e].info(t,o)}warn(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsWarn.length;e++)this.logStreamsWarn[e].warn(t,o)}error(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsError.length;e++)this.logStreamsError[e].error(t,o)}fatal(t,e){const o=this.datumDecorator(e);for(let e=0;e<this.logStreamsFatal.length;e++)this.logStreamsFatal[e].fatal(t,o)}initialize(){for(let t=0;t<this._StreamDefinitions.length;t++){let e=Object.assign({loggertype:"default",streamtype:"console",level:"info"},this._StreamDefinitions[t]);this._Providers.hasOwnProperty(e.loggertype)?this.addLogger(new this._Providers[e.loggertype](e,this),e.level):console.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(e)}`)}for(let t=0;t<this.logStreams.length;t++)this.logStreams[t].initialize()}logTime(t,e){let o=void 0!==t?t:"Time",s=new Date;this.info(`${o} ${s} (epoch ${+s})`,e)}getTimeStamp(){return+new Date}getTimeDelta(t){return+new Date-t}logTimeDelta(t,e,o){let s=void 0!==e?e:"Time Measurement",r=+new Date;this.info(`${s} logged at (epoch ${+r}) took (${t}ms)`,o)}logTimeDeltaHuman(t,e,o){let s=void 0!==e?e:"Time Measurement",r=+new Date,i=parseInt(t%1e3),a=parseInt(t/1e3%60),n=parseInt(t/6e4%60),l=parseInt(t/36e5);i=i<10?"00"+i:i<100?"0"+i:i,a=a<10?"0"+a:a,n=n<10?"0"+n:n,l=l<10?"0"+l:l,this.info(`${s} logged at (epoch ${+r}) took (${t}ms) or (${l}:${n}:${a}.${i})`,o)}logTimeDeltaRelative(t,e,o){this.logTimeDelta(this.getTimeDelta(t),e,o)}logTimeDeltaRelativeHuman(t,e,o){this.logTimeDeltaHuman(this.getTimeDelta(t),e,o)}}e.exports={new:function(t){return new s(t)},FableLog:s},e.exports.LogProviderBase=t("./Fable-Log-BaseLogger.js")},{"./Fable-Log-BaseLogger.js":1,"./Fable-Log-DefaultProviders-Node.js":3,"./Fable-Log-DefaultStreams.json":4}]},{},[2])(2)}));
//# sourceMappingURL=fable-log.min.js.map
