{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/fable-uuid/source/Fable-UUID-Random-Browser.js","fable-log.min.js","node_modules/fable-uuid/source/Fable-UUID.js","source/Fable-Log-BaseLogger.js","source/Fable-Log-DefaultProviders-Browser.js","source/Fable-Log-DefaultStreams.json","source/Fable-Log-Logger-Console.js","source/Fable-Log.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","[object Object]","this","getRandomValues","crypto","bind","window","msCrypto","tmpBuffer","Uint8Array","tmpValue","Math","random","generateWhatWGBytes","generateRandomBytes","2","libRandomByteGenerator","FableUUID","pSettings","_UUIDModeRandom","hasOwnProperty","UUIDModeRandom","_UUIDLength","UUIDLength","_UUIDRandomDictionary","UUIDDictionary","randomByteGenerator","_HexLookup","toString","substr","pBuffer","join","Array","tmpRandomBytes","generate","bytesToUUID","tmpUUID","charAt","floor","generateRandom","generateUUIDv4","new","./Fable-UUID-Random.js","3","libFableUUID","pLogStreamSettings","pFableLog","_Settings","loggerUUID","getUUID","pLogText","pLogObject","write","pLogLevel","fable-uuid","4","getDefaultProviders","tmpDefaultProviders","console","./Fable-Log-Logger-Console.js","5","loggertype","streamtype","level","6","libBaseLogger","super","_ShowTimeStamps","ShowTimeStamps","_FormattedTimeStamps","FormattedTimeStamps","_ContextMessage","Context","Product","pLevel","pObject","tmpDate","Date","toISOString","log","JSON","stringify","./Fable-Log-BaseLogger.js","7","FableLog","pFableSettings","pFable","tmpSettings","_Providers","_StreamDefinitions","LogStreams","logStreams","logProviders","activeLogStreams","logStreamsTrace","logStreamsDebug","logStreamsInfo","logStreamsWarn","logStreamsError","logStreamsFatal","datumDecorator","pDatum","uuid","pLogger","push","fDatumDecorator","pMessage","tmpDecoratedDatum","trace","debug","info","warn","error","fatal","tmpStreamDefinition","Object","assign","addLogger","initialize","tmpMessage","tmpTime","pTimeStamp","pTimeDelta","tmpEndTime","tmpMs","parseInt","tmpSeconds","tmpMinutes","tmpHours","pStartTime","logTimeDelta","getTimeDelta","logTimeDeltaHuman","./Fable-Log-DefaultProviders.js","./Fable-Log-DefaultStreams.json"],"mappings":"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","file":"fable-log.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/**\n* Random Byte Generator - Browser version\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nclass RandomBytes\n{\n\tconstructor()\n\t{\n\n\t\t// getRandomValues needs to be invoked in a context where \"this\" is a Crypto\n\t\t// implementation. Also, find the complete implementation of crypto on IE11.\n\t\tthis.getRandomValues = (typeof(crypto) != 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto)) ||\n                      \t\t(typeof(msCrypto) != 'undefined' && typeof window.msCrypto.getRandomValues == 'function' && msCrypto.getRandomValues.bind(msCrypto));\n\t}\n\n\t// WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n\tgenerateWhatWGBytes()\n\t{\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tthis.getRandomValues(tmpBuffer);\n\t\treturn tmpBuffer;\n\t}\n\n\t// Math.random()-based (RNG)\n\tgenerateRandomBytes()\n\t{\n\t\t//\n\t\t// If all else fails, use Math.random().  It's fast, but is of unspecified\n\t\t// quality.\n\t\tlet tmpBuffer = new Uint8Array(16); // eslint-disable-line no-undef\n\n\t\tfor (let i = 0, tmpValue; i < 16; i++)\n\t\t{\n\t\t\tif ((i & 0x03) === 0)\n\t\t\t{\n\t\t\t\ttmpValue = Math.random() * 0x100000000;\n\t\t\t}\n\n\t\t\ttmpBuffer[i] = tmpValue >>> ((i & 0x03) << 3) & 0xff;\n\t\t}\n\n\t\treturn tmpBuffer;\n\t}\n\n\tgenerate()\n\t{\n\t\tif (this.getRandomValues)\n\t\t{\n\t\t\treturn generateWhatWGBytes();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn generateRandomBytes();\n\t\t}\n\t}\n}\n\nmodule.exports = RandomBytes;\n",null,"/**\n* Fable UUID Generator\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable UUID\n*/\n\n/**\n* Fable Solution UUID Generation Main Class\n*\n* @class FableUUID\n* @constructor\n*/\n\nvar libRandomByteGenerator = require('./Fable-UUID-Random.js')\n\nclass FableUUID\n{\n\tconstructor(pSettings)\n\t{\n\t\t// Determine if the module is in \"Random UUID Mode\" which means just use the random character function rather than the v4 random UUID spec.\n\t\t// Note this allows UUIDs of various lengths (including very short ones) although guaranteed uniqueness goes downhill fast.\n\t\tthis._UUIDModeRandom = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDModeRandom')) ? (pSettings.UUIDModeRandom == true) : false;\n\t\t// These two properties are only useful if we are in Random mode.  Otherwise it generates a v4 spec\n\t\t// Length for \"Random UUID Mode\" is set -- if not set it to 8\n\t\tthis._UUIDLength = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDLength')) ? (pSettings.UUIDLength + 0) : 8;\n\t\t// Dictionary for \"Random UUID Mode\"\n\t\tthis._UUIDRandomDictionary = (typeof(pSettings) === 'object') && (pSettings.hasOwnProperty('UUIDDictionary')) ? (pSettings.UUIDDictionary + 0) : '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n\t\tthis.randomByteGenerator = new libRandomByteGenerator();\n\n\t\t// Lookup table for hex codes\n\t\tthis._HexLookup = [];\n\t\tfor (let i = 0; i < 256; ++i)\n\t\t{\n\t\t\tthis._HexLookup[i] = (i + 0x100).toString(16).substr(1);\n\t\t}\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tbytesToUUID(pBuffer)\n\t{\n\t\tlet i = 0;\n\t\t// join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n\t\treturn ([\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], \n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], '-',\n\t\t\t\t\tthis._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]], this._HexLookup[pBuffer[i++]]\n\t\t\t\t]).join('');\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgenerateUUIDv4()\n\t{\n\t\tlet tmpBuffer = new Array(16);\n\t\tvar tmpRandomBytes = this.randomByteGenerator.generate();\n\n\t\t// Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\t\ttmpRandomBytes[6] = (tmpRandomBytes[6] & 0x0f) | 0x40;\n\t\ttmpRandomBytes[8] = (tmpRandomBytes[8] & 0x3f) | 0x80;\n\n\t\treturn this.bytesToUUID(tmpRandomBytes);\n\t}\n\n\t// Simple random UUID generation\n\tgenerateRandom()\n\t{\n\t\tlet tmpUUID = '';\n\n\t\tfor (let i = 0; i < this._UUIDLength; i++)\n\t\t{\n\t\t\ttmpUUID += this._UUIDRandomDictionary.charAt(Math.floor(Math.random() * (this._UUIDRandomDictionary.length-1)));\n\t\t}\n\n\t\treturn tmpUUID;\n\t}\n\n\t// Adapted from node-uuid (https://github.com/kelektiv/node-uuid)\n\tgetUUID()\n\t{\n\t\tif (this._UUIDModeRandom)\n\t\t{\n\t\t\treturn this.generateRandom();\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn this.generateUUIDv4();\n\t\t}\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableUUID(pSettings);\n}\n\n\nmodule.exports = {new:autoConstruct, FableUUID:FableUUID};\n","/**\n* Base Logger Class\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\nconst libFableUUID = new (require('fable-uuid').FableUUID)();\n\nclass BaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\t// This should not possibly be able to be instantiated without a settings object\n\t\tthis._Settings = pLogStreamSettings;\n\t\t\n\t\t// The base logger does nothing but associate a UUID with itself\n\t\tthis.loggerUUID = libFableUUID.getUUID();\n\t}\n\n\tinitialize()\n\t{\n\t\t// No operation.\n\t}\n\n\ttrace(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"trace\", pLogText, pLogObject);\n\t}\n\n\tdebug(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"debug\", pLogText, pLogObject);\n\t}\n\n\tinfo(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"info\", pLogText, pLogObject);\n\t}\n\n\twarn(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"warn\", pLogText, pLogObject);\n\t}\n\n\terror(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"error\", pLogText, pLogObject);\n\t}\n\n\tfatal(pLogText, pLogObject)\n\t{\n\t\tthis.write(\"fatal\", pLogText, pLogObject);\n\t}\n\n\twrite(pLogLevel, pLogText, pLogObject)\n\t{\n\t\t// The base logger does nothing.\n\t\treturn true;\n\t}\n}\n\nmodule.exports = BaseLogger;\n","/**\n* Default Logger Provider Function --- Browser\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n*/\n\n// Return the providers that are available without extensions loaded\ngetDefaultProviders = () =>\n{\n\tlet tmpDefaultProviders = {};\n\n\ttmpDefaultProviders.console = require('./Fable-Log-Logger-Console.js');\n\n\treturn tmpDefaultProviders;\n}\n\nmodule.exports = getDefaultProviders();","module.exports=[\n    {\n        \"loggertype\": \"console\",\n        \"streamtype\": \"console\",\n        \"level\": \"trace\"\n    }\n]","let libBaseLogger = require('./Fable-Log-BaseLogger.js');\n\nclass ConsoleLogger extends libBaseLogger\n{\n\tconstructor(pLogStreamSettings, pFableLog)\n\t{\n\t\tsuper(pLogStreamSettings)\n\n\t\tthis._ShowTimeStamps = pLogStreamSettings.hasOwnProperty('ShowTimeStamps') ? (pLogStreamSettings.ShowTimeStamps == true) : false;\n\t\tthis._FormattedTimeStamps = pLogStreamSettings.hasOwnProperty('FormattedTimeStamps') ? (pLogStreamSettings.FormattedTimeStamps == true) : false;\n\n\t\tthis._ContextMessage = pLogStreamSettings.hasOwnProperty('Context') ? ` (${pLogStreamSettings.Context})` : \n\t\t\t\t\t\t\t\tpFableLog._Settings.hasOwnProperty('Product') ? ` (${pFableLog._Settings.Product})` :\n\t\t\t\t\t\t\t\t'';\n\t}\n\n\twrite(pLevel, pLogText, pObject)\n\t{\n\t\tif (this._ShowTimeStamps && this._FormattedTimeStamps)\n\t\t{\n\t\t\tlet tmpDate = (new Date()).toISOString();\n\t\t\tconsole.log(`${tmpDate} [${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\t\telse if (this._ShowTimeStamps)\n\t\t{\n\t\t\tlet tmpDate = +new Date();\n\t\t\tconsole.log(`${tmpDate} [${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\t\telse\n\t\t{\n\t\t\tconsole.log(`[${pLevel}]${this._ContextMessage} ${pLogText}`);\n\t\t}\n\n\t\t// Write out the object on a separate line if it is passed in\n\t\tif (typeof(pObject) !== 'undefined')\n\t\t{\n\t\t\tconsole.log(JSON.stringify(pObject, null, 4));\n\t\t}\n\t}\n\n}\n\nmodule.exports = ConsoleLogger;","/**\n* Fable Logging Add-on\n*\n* @license MIT\n*\n* @author Steven Velozo <steven@velozo.com>\n* @module Fable Logger\n*/\n\n/**\n* Fable Solution Log Wrapper Main Class\n*\n* @class FableLog\n* @constructor\n*/\nclass FableLog\n{\n\tconstructor(pFableSettings, pFable)\n\t{\n\t\tlet tmpSettings = (typeof(pFableSettings) === 'object') ? pFableSettings : {}\n\t\tthis._Settings = tmpSettings;\n\n\t\tthis._Providers = require('./Fable-Log-DefaultProviders.js');\n\n\t\tthis._StreamDefinitions = (tmpSettings.hasOwnProperty('LogStreams')) ? tmpSettings.LogStreams : require('./Fable-Log-DefaultStreams.json');\n\n\t\tthis.logStreams = [];\n\n\t\t// This object gets decorated for one-time instantiated providers that\n\t\t//  have multiple outputs, such as bunyan.\n\t\tthis.logProviders = {};\n\n\t\t// A hash list of the GUIDs for each log stream, so they can't be added to the set more than one time\n\t\tthis.activeLogStreams = {};\n\n\t\tthis.logStreamsTrace = [];\n\t\tthis.logStreamsDebug = [];\n\t\tthis.logStreamsInfo = [];\n\t\tthis.logStreamsWarn = [];\n\t\tthis.logStreamsError = [];\n\t\tthis.logStreamsFatal = [];\n\n\t\tthis.datumDecorator = (pDatum) => pDatum;\n\n\t\tthis.uuid = (typeof(tmpSettings.Product) === 'string') ? tmpSettings.Product : 'Default';\n\t}\n\n\taddLogger(pLogger, pLevel)\n\t{\n\t\t// Bail out if we've already created one.\n\t\tif (this.activeLogStreams.hasOwnProperty(pLogger.loggerUUID))\n\t\t{\n\t\t\treturn false;\n\t\t}\n\n\t\t// Add it to the streams and to the mutex\n\t\tthis.logStreams.push(pLogger);\n\t\tthis.activeLogStreams[pLogger.loggerUUID] = true;\n\n\t\t// Make sure a kosher level was passed in\n\t\tswitch (pLevel)\n\t\t{\n\t\t\tcase 'trace':\n\t\t\t\tthis.logStreamsTrace.push(pLogger);\n\t\t\tcase 'debug':\n\t\t\t\tthis.logStreamsDebug.push(pLogger);\n\t\t\tcase 'info':\n\t\t\t\tthis.logStreamsInfo.push(pLogger);\n\t\t\tcase 'warn':\n\t\t\t\tthis.logStreamsWarn.push(pLogger);\n\t\t\tcase 'error':\n\t\t\t\tthis.logStreamsError.push(pLogger);\n\t\t\tcase 'fatal':\n\t\t\t\tthis.logStreamsFatal.push(pLogger);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tsetDatumDecorator(fDatumDecorator)\n\t{\n\t\tif (typeof(fDatumDecorator) === 'function')\n\t\t{\n\t\t\tthis.datumDecorator = fDatumDecorator;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tthis.datumDecorator = (pDatum) => pDatum;\n\t\t}\n\t}\n\n\ttrace(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsTrace.length; i++)\n\t\t{\n\t\t\tthis.logStreamsTrace[i].trace(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tdebug(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsDebug.length; i++)\n\t\t{\n\t\t\tthis.logStreamsDebug[i].debug(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinfo(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsInfo.length; i++)\n\t\t{\n\t\t\tthis.logStreamsInfo[i].info(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\twarn(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsWarn.length; i++)\n\t\t{\n\t\t\tthis.logStreamsWarn[i].warn(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\terror(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsError.length; i++)\n\t\t{\n\t\t\tthis.logStreamsError[i].error(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tfatal(pMessage, pDatum)\n\t{\n\t\tconst tmpDecoratedDatum = this.datumDecorator(pDatum);\n\t\tfor (let i = 0; i < this.logStreamsFatal.length; i++)\n\t\t{\n\t\t\tthis.logStreamsFatal[i].fatal(pMessage, tmpDecoratedDatum);\n\t\t}\n\t}\n\n\tinitialize()\n\t{\n\t\t// \"initialize\" each logger as defined in the logging parameters\n\t\tfor (let i = 0; i < this._StreamDefinitions.length; i++)\n\t\t{\n\t\t\tlet tmpStreamDefinition = Object.assign({loggertype:'console',streamtype:'console',level:'info'},this._StreamDefinitions[i]);\n\n\t\t\tif (!this._Providers.hasOwnProperty(tmpStreamDefinition.loggertype))\n\t\t\t{\n\t\t\t\tconsole.log(`Error initializing log stream: bad loggertype in stream definition ${JSON.stringify(tmpStreamDefinition)}`);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tthis.addLogger(new this._Providers[tmpStreamDefinition.loggertype](tmpStreamDefinition, this), tmpStreamDefinition.level);\n\t\t\t}\n\t\t}\n\n\t\t// Now initialize each one.\n\t\tfor (let i = 0; i < this.logStreams.length; i++)\n\t\t{\n\t\t\tthis.logStreams[i].initialize();\n\t\t}\n\t}\n\n\tlogTime(pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time';\n\t\tlet tmpTime = new Date();\n\t\tthis.info(`${tmpMessage} ${tmpTime} (epoch ${+tmpTime})`, pDatum);\n\t}\n\n\t// Get a timestamp\n\tgetTimeStamp()\n\t{\n\t\treturn +new Date();\n\t}\n\n\tgetTimeDelta(pTimeStamp)\n\t{\n\t\tlet tmpEndTime = +new Date();\n\t\treturn tmpEndTime-pTimeStamp;\n\t}\n\n\t// Log the delta between a timestamp, and now with a message\n\tlogTimeDelta(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\t\tlet tmpDatum = (typeof(pDatum) === 'object') ? pDatum : {};\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms)`, pDatum);\n\t}\n\n\tlogTimeDeltaHuman(pTimeDelta, pMessage, pDatum)\n\t{\n\t\tlet tmpMessage = (typeof(pMessage) !== 'undefined') ? pMessage : 'Time Measurement';\n\n\t\tlet tmpEndTime = +new Date();\n\n\t\tlet tmpMs = parseInt(pTimeDelta%1000);\n\t\tlet tmpSeconds = parseInt((pTimeDelta/1000)%60);\n\t\tlet tmpMinutes = parseInt((pTimeDelta/(1000*60))%60);\n\t\tlet tmpHours = parseInt(pTimeDelta/(1000*60*60));\n\n\t\ttmpMs = (tmpMs < 10) ? \"00\"+tmpMs : (tmpMs < 100) ? \"0\"+tmpMs : tmpMs;\n\t\ttmpSeconds = (tmpSeconds < 10) ? \"0\"+tmpSeconds : tmpSeconds;\n\t\ttmpMinutes = (tmpMinutes < 10) ? \"0\"+tmpMinutes : tmpMinutes;\n\t\ttmpHours = (tmpHours < 10) ? \"0\"+tmpHours : tmpHours;\n\n\t\tthis.info(`${tmpMessage} logged at (epoch ${+tmpEndTime}) took (${pTimeDelta}ms) or (${tmpHours}:${tmpMinutes}:${tmpSeconds}.${tmpMs})`, pDatum);\n\t}\n\n\tlogTimeDeltaRelative(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDelta(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n\n\tlogTimeDeltaRelativeHuman(pStartTime, pMessage, pDatum)\n\t{\n\t\tthis.logTimeDeltaHuman(this.getTimeDelta(pStartTime), pMessage, pDatum);\n\t}\n}\n\n// This is for backwards compatibility\nfunction autoConstruct(pSettings)\n{\n\treturn new FableLog(pSettings);\n}\n\n\nmodule.exports = {new:autoConstruct, FableLog:FableLog};\n"]}